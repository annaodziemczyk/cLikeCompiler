// Generated from src/parser/Cmm.g4 by ANTLR 4.7
package parser;

	import ast.*;
	import types.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CmmLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, NEWLINE=31, 
		WS=32, ML_COMMENT=33, COMMENT=34, INT_CONSTANT=35, REAL_CONSTANT=36, CHAR_CONSTANT=37, 
		OP_ADD_SUB=38, OP_DIV_MUL=39, OP_LOG=40, OP_NEG=41, OP_COMP=42, MAIN_FUNC=43, 
		RETURN_CONSTANT=44, BLOCK_START=45, ID=46;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "NEWLINE", "WS", "ML_COMMENT", 
		"COMMENT", "INT_CONSTANT", "REAL_CONSTANT", "CHAR_CONSTANT", "CHAR_ALPHA", 
		"CHAR_NUMERIC", "CHAR_SYMBOL", "CHAR_WS", "OP_ADD_SUB", "OP_DIV_MUL", 
		"OP_LOG", "OP_NEG", "OP_COMP", "MAIN_FUNC", "RETURN_CONSTANT", "BLOCK_START", 
		"ID", "INT", "EXP", "LETTER", "ALPHANUMERIC"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "','", "';'", "'['", "']'", "'void'", "'('", "')'", "'}'", "'='", 
		"'write'", "'read'", "'while'", "'int'", "'double'", "'char'", "'if'", 
		"'else'", "'*'", "'/'", "'%'", "'+'", "'-'", "'>'", "'>='", "'<'", "'<='", 
		"'!='", "'=='", "'&&'", "'||'", null, null, null, null, null, null, null, 
		null, null, null, "'!'", null, "'main'", "'return'", "'{'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "NEWLINE", "WS", "ML_COMMENT", 
		"COMMENT", "INT_CONSTANT", "REAL_CONSTANT", "CHAR_CONSTANT", "OP_ADD_SUB", 
		"OP_DIV_MUL", "OP_LOG", "OP_NEG", "OP_COMP", "MAIN_FUNC", "RETURN_CONSTANT", 
		"BLOCK_START", "ID"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CmmLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Cmm.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\60\u0190\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3"+
		"\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13"+
		"\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26"+
		"\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \6 \u00d1"+
		"\n \r \16 \u00d2\3 \3 \3!\6!\u00d8\n!\r!\16!\u00d9\3!\3!\3\"\3\"\3\"\3"+
		"\"\7\"\u00e2\n\"\f\"\16\"\u00e5\13\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#"+
		"\3#\7#\u00f1\n#\f#\16#\u00f4\13#\3#\5#\u00f7\n#\3#\5#\u00fa\n#\3#\3#\3"+
		"$\3$\3%\7%\u0101\n%\f%\16%\u0104\13%\3%\3%\6%\u0108\n%\r%\16%\u0109\3"+
		"%\5%\u010d\n%\3%\3%\3%\6%\u0112\n%\r%\16%\u0113\3%\5%\u0117\n%\7%\u0119"+
		"\n%\f%\16%\u011c\13%\3%\3%\3%\5%\u0121\n%\3&\3&\7&\u0125\n&\f&\16&\u0128"+
		"\13&\3&\3&\3&\3\'\5\'\u012e\n\'\3(\3(\3)\3)\3*\3*\3*\3*\5*\u0138\n*\3"+
		"+\3+\3,\3,\3-\3-\3-\3-\5-\u0142\n-\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3/\3"+
		"/\5/\u0150\n/\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3"+
		"\61\3\62\3\62\3\63\7\63\u0161\n\63\f\63\16\63\u0164\13\63\3\63\6\63\u0167"+
		"\n\63\r\63\16\63\u0168\3\63\7\63\u016c\n\63\f\63\16\63\u016f\13\63\3\63"+
		"\7\63\u0172\n\63\f\63\16\63\u0175\13\63\6\63\u0177\n\63\r\63\16\63\u0178"+
		"\3\64\3\64\3\64\7\64\u017e\n\64\f\64\16\64\u0181\13\64\5\64\u0183\n\64"+
		"\3\65\3\65\5\65\u0187\n\65\3\65\3\65\3\66\3\66\3\67\3\67\5\67\u018f\n"+
		"\67\4\u00e3\u00f2\28\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M\2O\2Q\2S\2U(W)Y*[+],_-a.c/e\60"+
		"g\2i\2k\2m\2\3\2\r\4\2\f\f\17\17\4\2\13\13\"\"\3\3\f\f\3\2\62;\4\2C\\"+
		"c|\n\2((*+/\61<=??^^~~\u0080\u0080\4\2--//\5\2\'\',,\61\61\3\2\62\62\3"+
		"\2\63;\4\2GGgg\2\u01a6\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2"+
		"\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3"+
		"\2\2\2\3o\3\2\2\2\5q\3\2\2\2\7s\3\2\2\2\tu\3\2\2\2\13w\3\2\2\2\r|\3\2"+
		"\2\2\17~\3\2\2\2\21\u0080\3\2\2\2\23\u0082\3\2\2\2\25\u0084\3\2\2\2\27"+
		"\u008a\3\2\2\2\31\u008f\3\2\2\2\33\u0095\3\2\2\2\35\u0099\3\2\2\2\37\u00a0"+
		"\3\2\2\2!\u00a5\3\2\2\2#\u00a8\3\2\2\2%\u00ad\3\2\2\2\'\u00af\3\2\2\2"+
		")\u00b1\3\2\2\2+\u00b3\3\2\2\2-\u00b5\3\2\2\2/\u00b7\3\2\2\2\61\u00b9"+
		"\3\2\2\2\63\u00bc\3\2\2\2\65\u00be\3\2\2\2\67\u00c1\3\2\2\29\u00c4\3\2"+
		"\2\2;\u00c7\3\2\2\2=\u00ca\3\2\2\2?\u00d0\3\2\2\2A\u00d7\3\2\2\2C\u00dd"+
		"\3\2\2\2E\u00ec\3\2\2\2G\u00fd\3\2\2\2I\u0120\3\2\2\2K\u0122\3\2\2\2M"+
		"\u012d\3\2\2\2O\u012f\3\2\2\2Q\u0131\3\2\2\2S\u0137\3\2\2\2U\u0139\3\2"+
		"\2\2W\u013b\3\2\2\2Y\u0141\3\2\2\2[\u0143\3\2\2\2]\u014f\3\2\2\2_\u0151"+
		"\3\2\2\2a\u0156\3\2\2\2c\u015d\3\2\2\2e\u0176\3\2\2\2g\u0182\3\2\2\2i"+
		"\u0184\3\2\2\2k\u018a\3\2\2\2m\u018e\3\2\2\2op\7.\2\2p\4\3\2\2\2qr\7="+
		"\2\2r\6\3\2\2\2st\7]\2\2t\b\3\2\2\2uv\7_\2\2v\n\3\2\2\2wx\7x\2\2xy\7q"+
		"\2\2yz\7k\2\2z{\7f\2\2{\f\3\2\2\2|}\7*\2\2}\16\3\2\2\2~\177\7+\2\2\177"+
		"\20\3\2\2\2\u0080\u0081\7\177\2\2\u0081\22\3\2\2\2\u0082\u0083\7?\2\2"+
		"\u0083\24\3\2\2\2\u0084\u0085\7y\2\2\u0085\u0086\7t\2\2\u0086\u0087\7"+
		"k\2\2\u0087\u0088\7v\2\2\u0088\u0089\7g\2\2\u0089\26\3\2\2\2\u008a\u008b"+
		"\7t\2\2\u008b\u008c\7g\2\2\u008c\u008d\7c\2\2\u008d\u008e\7f\2\2\u008e"+
		"\30\3\2\2\2\u008f\u0090\7y\2\2\u0090\u0091\7j\2\2\u0091\u0092\7k\2\2\u0092"+
		"\u0093\7n\2\2\u0093\u0094\7g\2\2\u0094\32\3\2\2\2\u0095\u0096\7k\2\2\u0096"+
		"\u0097\7p\2\2\u0097\u0098\7v\2\2\u0098\34\3\2\2\2\u0099\u009a\7f\2\2\u009a"+
		"\u009b\7q\2\2\u009b\u009c\7w\2\2\u009c\u009d\7d\2\2\u009d\u009e\7n\2\2"+
		"\u009e\u009f\7g\2\2\u009f\36\3\2\2\2\u00a0\u00a1\7e\2\2\u00a1\u00a2\7"+
		"j\2\2\u00a2\u00a3\7c\2\2\u00a3\u00a4\7t\2\2\u00a4 \3\2\2\2\u00a5\u00a6"+
		"\7k\2\2\u00a6\u00a7\7h\2\2\u00a7\"\3\2\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa"+
		"\7n\2\2\u00aa\u00ab\7u\2\2\u00ab\u00ac\7g\2\2\u00ac$\3\2\2\2\u00ad\u00ae"+
		"\7,\2\2\u00ae&\3\2\2\2\u00af\u00b0\7\61\2\2\u00b0(\3\2\2\2\u00b1\u00b2"+
		"\7\'\2\2\u00b2*\3\2\2\2\u00b3\u00b4\7-\2\2\u00b4,\3\2\2\2\u00b5\u00b6"+
		"\7/\2\2\u00b6.\3\2\2\2\u00b7\u00b8\7@\2\2\u00b8\60\3\2\2\2\u00b9\u00ba"+
		"\7@\2\2\u00ba\u00bb\7?\2\2\u00bb\62\3\2\2\2\u00bc\u00bd\7>\2\2\u00bd\64"+
		"\3\2\2\2\u00be\u00bf\7>\2\2\u00bf\u00c0\7?\2\2\u00c0\66\3\2\2\2\u00c1"+
		"\u00c2\7#\2\2\u00c2\u00c3\7?\2\2\u00c38\3\2\2\2\u00c4\u00c5\7?\2\2\u00c5"+
		"\u00c6\7?\2\2\u00c6:\3\2\2\2\u00c7\u00c8\7(\2\2\u00c8\u00c9\7(\2\2\u00c9"+
		"<\3\2\2\2\u00ca\u00cb\7~\2\2\u00cb\u00cc\7~\2\2\u00cc>\3\2\2\2\u00cd\u00ce"+
		"\7\17\2\2\u00ce\u00d1\7\f\2\2\u00cf\u00d1\t\2\2\2\u00d0\u00cd\3\2\2\2"+
		"\u00d0\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d0\3\2\2\2\u00d2\u00d3"+
		"\3\2\2\2\u00d3\u00d4\3\2\2\2\u00d4\u00d5\b \2\2\u00d5@\3\2\2\2\u00d6\u00d8"+
		"\t\3\2\2\u00d7\u00d6\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9\u00d7\3\2\2\2\u00d9"+
		"\u00da\3\2\2\2\u00da\u00db\3\2\2\2\u00db\u00dc\b!\2\2\u00dcB\3\2\2\2\u00dd"+
		"\u00de\7\61\2\2\u00de\u00df\7,\2\2\u00df\u00e3\3\2\2\2\u00e0\u00e2\13"+
		"\2\2\2\u00e1\u00e0\3\2\2\2\u00e2\u00e5\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e3"+
		"\u00e1\3\2\2\2\u00e4\u00e6\3\2\2\2\u00e5\u00e3\3\2\2\2\u00e6\u00e7\13"+
		"\2\2\2\u00e7\u00e8\7,\2\2\u00e8\u00e9\7\61\2\2\u00e9\u00ea\3\2\2\2\u00ea"+
		"\u00eb\b\"\2\2\u00ebD\3\2\2\2\u00ec\u00ed\7\61\2\2\u00ed\u00ee\7\61\2"+
		"\2\u00ee\u00f2\3\2\2\2\u00ef\u00f1\13\2\2\2\u00f0\u00ef\3\2\2\2\u00f1"+
		"\u00f4\3\2\2\2\u00f2\u00f3\3\2\2\2\u00f2\u00f0\3\2\2\2\u00f3\u00f6\3\2"+
		"\2\2\u00f4\u00f2\3\2\2\2\u00f5\u00f7\7\17\2\2\u00f6\u00f5\3\2\2\2\u00f6"+
		"\u00f7\3\2\2\2\u00f7\u00f9\3\2\2\2\u00f8\u00fa\t\4\2\2\u00f9\u00f8\3\2"+
		"\2\2\u00fa\u00fb\3\2\2\2\u00fb\u00fc\b#\2\2\u00fcF\3\2\2\2\u00fd\u00fe"+
		"\5g\64\2\u00feH\3\2\2\2\u00ff\u0101\5g\64\2\u0100\u00ff\3\2\2\2\u0101"+
		"\u0104\3\2\2\2\u0102\u0100\3\2\2\2\u0102\u0103\3\2\2\2\u0103\u0105\3\2"+
		"\2\2\u0104\u0102\3\2\2\2\u0105\u0107\7\60\2\2\u0106\u0108\t\5\2\2\u0107"+
		"\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109\u0107\3\2\2\2\u0109\u010a\3\2"+
		"\2\2\u010a\u010c\3\2\2\2\u010b\u010d\5i\65\2\u010c\u010b\3\2\2\2\u010c"+
		"\u010d\3\2\2\2\u010d\u0121\3\2\2\2\u010e\u010f\5g\64\2\u010f\u011a\7\60"+
		"\2\2\u0110\u0112\t\5\2\2\u0111\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113"+
		"\u0111\3\2\2\2\u0113\u0114\3\2\2\2\u0114\u0116\3\2\2\2\u0115\u0117\5i"+
		"\65\2\u0116\u0115\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u0119\3\2\2\2\u0118"+
		"\u0111\3\2\2\2\u0119\u011c\3\2\2\2\u011a\u0118\3\2\2\2\u011a\u011b\3\2"+
		"\2\2\u011b\u0121\3\2\2\2\u011c\u011a\3\2\2\2\u011d\u011e\5g\64\2\u011e"+
		"\u011f\5i\65\2\u011f\u0121\3\2\2\2\u0120\u0102\3\2\2\2\u0120\u010e\3\2"+
		"\2\2\u0120\u011d\3\2\2\2\u0121J\3\2\2\2\u0122\u0126\7)\2\2\u0123\u0125"+
		"\7^\2\2\u0124\u0123\3\2\2\2\u0125\u0128\3\2\2\2\u0126\u0124\3\2\2\2\u0126"+
		"\u0127\3\2\2\2\u0127\u0129\3\2\2\2\u0128\u0126\3\2\2\2\u0129\u012a\13"+
		"\2\2\2\u012a\u012b\7)\2\2\u012bL\3\2\2\2\u012c\u012e\t\6\2\2\u012d\u012c"+
		"\3\2\2\2\u012eN\3\2\2\2\u012f\u0130\4\62;\2\u0130P\3\2\2\2\u0131\u0132"+
		"\t\7\2\2\u0132R\3\2\2\2\u0133\u0134\7^\2\2\u0134\u0138\7p\2\2\u0135\u0136"+
		"\7^\2\2\u0136\u0138\7v\2\2\u0137\u0133\3\2\2\2\u0137\u0135\3\2\2\2\u0138"+
		"T\3\2\2\2\u0139\u013a\t\b\2\2\u013aV\3\2\2\2\u013b\u013c\t\t\2\2\u013c"+
		"X\3\2\2\2\u013d\u013e\7(\2\2\u013e\u0142\7(\2\2\u013f\u0140\7~\2\2\u0140"+
		"\u0142\7~\2\2\u0141\u013d\3\2\2\2\u0141\u013f\3\2\2\2\u0142Z\3\2\2\2\u0143"+
		"\u0144\7#\2\2\u0144\\\3\2\2\2\u0145\u0150\7@\2\2\u0146\u0147\7@\2\2\u0147"+
		"\u0150\7?\2\2\u0148\u0150\7>\2\2\u0149\u014a\7>\2\2\u014a\u0150\7?\2\2"+
		"\u014b\u014c\7#\2\2\u014c\u0150\7?\2\2\u014d\u014e\7?\2\2\u014e\u0150"+
		"\7?\2\2\u014f\u0145\3\2\2\2\u014f\u0146\3\2\2\2\u014f\u0148\3\2\2\2\u014f"+
		"\u0149\3\2\2\2\u014f\u014b\3\2\2\2\u014f\u014d\3\2\2\2\u0150^\3\2\2\2"+
		"\u0151\u0152\7o\2\2\u0152\u0153\7c\2\2\u0153\u0154\7k\2\2\u0154\u0155"+
		"\7p\2\2\u0155`\3\2\2\2\u0156\u0157\7t\2\2\u0157\u0158\7g\2\2\u0158\u0159"+
		"\7v\2\2\u0159\u015a\7w\2\2\u015a\u015b\7t\2\2\u015b\u015c\7p\2\2\u015c"+
		"b\3\2\2\2\u015d\u015e\7}\2\2\u015ed\3\2\2\2\u015f\u0161\7a\2\2\u0160\u015f"+
		"\3\2\2\2\u0161\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0162\u0163\3\2\2\2\u0163"+
		"\u0166\3\2\2\2\u0164\u0162\3\2\2\2\u0165\u0167\5k\66\2\u0166\u0165\3\2"+
		"\2\2\u0167\u0168\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169"+
		"\u016d\3\2\2\2\u016a\u016c\7a\2\2\u016b\u016a\3\2\2\2\u016c\u016f\3\2"+
		"\2\2\u016d\u016b\3\2\2\2\u016d\u016e\3\2\2\2\u016e\u0173\3\2\2\2\u016f"+
		"\u016d\3\2\2\2\u0170\u0172\5g\64\2\u0171\u0170\3\2\2\2\u0172\u0175\3\2"+
		"\2\2\u0173\u0171\3\2\2\2\u0173\u0174\3\2\2\2\u0174\u0177\3\2\2\2\u0175"+
		"\u0173\3\2\2\2\u0176\u0162\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u0176\3\2"+
		"\2\2\u0178\u0179\3\2\2\2\u0179f\3\2\2\2\u017a\u0183\t\n\2\2\u017b\u017f"+
		"\t\13\2\2\u017c\u017e\t\5\2\2\u017d\u017c\3\2\2\2\u017e\u0181\3\2\2\2"+
		"\u017f\u017d\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u017f"+
		"\3\2\2\2\u0182\u017a\3\2\2\2\u0182\u017b\3\2\2\2\u0183h\3\2\2\2\u0184"+
		"\u0186\t\f\2\2\u0185\u0187\t\b\2\2\u0186\u0185\3\2\2\2\u0186\u0187\3\2"+
		"\2\2\u0187\u0188\3\2\2\2\u0188\u0189\5g\64\2\u0189j\3\2\2\2\u018a\u018b"+
		"\t\6\2\2\u018bl\3\2\2\2\u018c\u018f\5g\64\2\u018d\u018f\5k\66\2\u018e"+
		"\u018c\3\2\2\2\u018e\u018d\3\2\2\2\u018fn\3\2\2\2\37\2\u00d0\u00d2\u00d9"+
		"\u00e3\u00f2\u00f6\u00f9\u0102\u0109\u010c\u0113\u0116\u011a\u0120\u0126"+
		"\u012d\u0137\u0141\u014f\u0162\u0168\u016d\u0173\u0178\u017f\u0182\u0186"+
		"\u018e\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}